#11057
n = int(input())
dp = [[0]*10 for _ in range(n)] # dp = [[0]*10]*n: 동일한 리스트 객체가 n번 반복되어 같은 객체 참조, 불가

for i in range(10):
  dp[0][i] = 1
print(dp)

for i in range(1,n):
  for j in range(10):
    for k in range(j+1):
      dp[i][j] += dp[i-1][k]

print(sum(dp[n-1])%10007)

시간복잡도를 개선하는 코드:
1) 대각선 합의 규칙을 이용한다. 
N=int(input())
dp=list([0]*10 for _ in range(N+1))
dp[1]=[1]*10 # 첫 행은 모두 1
for i in range(2,N+1):# 2부터 N+1까지만
    for j in range(10):
        if j==0: #첫 열은 모두 1
            dp[i][j]=1
        else:
            dp[i][j]=dp[i-1][j]+dp[i][j-1]
print(sum(dp[N])%10007)

2) 
import sys
input = sys.stdin.readline

n = int(input())
dp = [1] * 10

for i in range(n-1):
    for j in range(1, 10):
        dp[j] += dp[j-1]

print(sum(dp) % 10007)

대각선 합의 규칙을 응용한 것이나 마지막 행의 결과만 필요하기에 이전 결과는 기록하지 않는다는 차이점이 있다.
다음줄로 넘어갈 때마다, n-1번째 dp값 + n번째 자기 자신 앞의 dp값으로 n번째 줄 dp값을 갱신하는 원리이다.
