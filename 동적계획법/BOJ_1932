#1932
n = int(input())
tri = [list(map(int, input().split())) for _ in range(n)]

dp = [[0] * (i + 1) for i in range(n)]
dp[0][0] = tri[0][0] 

for i in range(1, n): 
    for j in range(i + 1):  
        if j == 0:  # 왼쪽 끝 값 (위에서 오는 하나의 값만 존재)
            dp[i][j] = dp[i - 1][j] + tri[i][j]
        elif j == i:  # 오른쪽 끝 값 (위에서 오는 하나의 값만 존재)
            dp[i][j] = dp[i - 1][j - 1] + tri[i][j]
        else:  # 중간 값 (위에서 두 가지 경로에서 올 수 있음)
            dp[i][j] = max(dp[i - 1][j - 1], dp[i - 1][j]) + tri[i][j]

# 최댓값 출력
print(max(dp[n - 1]))

기존 틀린 코드:
#1932
n = int(input())
dp = [[0 for _ in range(n)] for _ in range(n)]
tri = []
for _ in range(n):
  temp = list(map(int,input().split()))
  tri.append(temp)

for i in range(n):
  for j in range(i+1):
    dp[i][j] = tri[i][j]

for i in range(n-1):
  for j in range(i+2):
    if j == 0:
      dp[i+1][j] += dp[i][j]
    elif j == i-1:
      dp[i+1][j] += dp[i][j-1] //index error 발생, i=1, j=0이면 dp[2][0] = dp[1][-1] -> 인덱스 오류 발생
    else:
      dp[i+1][j] += max(dp[i][j],dp[i][j-1])

print(max(dp[n-1]))
