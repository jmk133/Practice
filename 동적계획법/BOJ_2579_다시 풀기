#2579 다시 풀기
import sys

n = int(sys.stdin.readline().strip())  # 입력 받기
if n == 1:  # 계단이 1개일 경우
    print(int(sys.stdin.readline().strip()))
    exit()

step = [0] * (n+1)  # 계단 점수 리스트
for i in range(1, n+1):
    step[i] = int(sys.stdin.readline().strip())

dp = [0] * (n+1)  # DP 배열 초기화
dp[1] = step[1]  # 첫 번째 계단 값 설정
if n >= 2:
    dp[2] = step[1] + step[2]  # 두 번째 계단까지 고려

for i in range(3, n+1):
    dp[i] = max(step[i] + step[i-1] + dp[i-3], step[i] + dp[i-2])  # 점화식

print(dp[n])  # 최종 결과 출력


#https://v3.leedo.me/devs/64
1. i번째, i-1번째 계단을 밟을 경우
2. i번째, i-2번째 계단을 밟을 경우
조건: 마지막 계단은 반드시 밟아야 한다. => 점화식을 도착지부터 생각하는 접근 방식으로 생각하자.
dp[n] => n을 포함했을 때의 최적값
