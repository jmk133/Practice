#1012
from collections import deque
t = int(input())
dx = [0,1,0,-1]
dy = [1,0,-1,0]

def bfs(x,y):
  dq = deque()
  dq.append((x,y))
  gp[x][y] = 0
  
  while dq:
    curr = dq.popleft()
    for i in range(4):
      nx = curr[0] + dx[i]
      ny = curr[1] + dy[i]
      if 0<= nx < m and 0 <= ny < n:
        if gp[nx][ny]:
          dq.append((nx,ny))
          gp[nx][ny] = 0
  return
  
for _ in range(t):
  m, n, k = map(int,input().split())
  cnt = 0
  gp = [[0 for _ in range(n)] for _ in range(m)]
  for _ in range(k):
    x, y = map(int,input().split())
    gp[x][y] = 1

  for i in range(m):
    for j in range(n):
      if gp[i][j]:
        bfs(i,j)
        cnt += 1
  print(cnt)
